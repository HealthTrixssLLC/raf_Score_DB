name: Deploy to SQL Server

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SQLCMD and SQL Server ODBC Driver
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
          sudo apt-get update
          # Install Microsoft ODBC Driver for SQL Server, mssql-tools, and unixodbc-dev
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17 mssql-tools unixodbc-dev

      - name: Validate DB Connection
        env:
          SQL_SERVER: 135.237.13.78,1433
          SQL_DB: ramoduledev_deploy
          SQL_USER: etl_user
          SQL_PASSWORD: etl_user
        run: |
          set -e
          echo "Attempting to connect to SQL Server..."
          if /opt/mssql-tools/bin/sqlcmd -S "$SQL_SERVER" -d "$SQL_DB" -U "$SQL_USER" -P "$SQL_PASSWORD" -Q "SELECT 1" > connection.log 2>&1; then
            echo "✅ DB connection successful!"
          else
            echo "❌ DB connection failed!"
            echo "--- SQLCMD ERROR LOG ---"
            cat connection.log
            exit 1
          fi

      - name: Deploy SQL Scripts
        env:
          SQL_SERVER: 135.237.13.78,1433
          SQL_DB: ramoduledev_deploy
          SQL_USER: etl_user
          SQL_PASSWORD: etl_user
        run: |
          # Example: Run all .sql files in the sql/ directory
          for file in $(find ./raf_score_DB/PreDeploy -type f -name "*.sql"); do
            /opt/mssql-tools/bin/sqlcmd -S $SQL_SERVER -d $SQL_DB -U $SQL_USER -P $SQL_PASSWORD \
              -C -N -i $file
          done
          for file in $(find ./raf_score_DB/dbo/Tables -type f -name "Pre*.sql"); do
            /opt/mssql-tools/bin/sqlcmd -S $SQL_SERVER -d $SQL_DB -U $SQL_USER -P $SQL_PASSWORD \
              -C -N -i $file
          done
